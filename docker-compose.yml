version: '3'

services:

  app:
    container_name: django
    restart: always
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app/
    command: >
      sh -c "python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py loaddata initial_role_data.json &&
             python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
      - redis

  db:
    container_name: postgres
    image: postgres:10-alpine
    env_file:
      - ./.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:alpine

  celeryworker:
    container_name: celeryworker
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env.dev
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
      - redis
      - app
    restart: always
    labels:
      io.rancher.container.pull_image: 'always'

  celerybeat:
    container_name: celerybeat
    build:
      context: .
    command:  celery -A app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env.dev
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
      - redis
      - celeryworker

volumes:
  pgdata: